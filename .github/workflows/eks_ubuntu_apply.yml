name: eks_apply

on:
  push:
    branches:
      - 'eks/**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TF_VAR_aws_region: us-east-1
      # https://cloud-images.ubuntu.com/docs/aws/eks/
      TF_VAR_image_id: ami-02424b9007c11a4e5
      TF_VAR_instance_type: t3a.small
      TF_VAR_min_size: 1
      TF_VAR_desired_capacity: 1
      TF_VAR_max_size: 10
      TF_VAR_root_size: 32
      TF_VAR_extra_size: 1
      TF_VAR_use_spot: false

    steps:
      - uses: actions/checkout@v2
      - uses: nelonoel/branch-name@v1.0.1
      - name: Identify branch and env
        run: echo "Running on branch ${BRANCH_NAME} env ${TF_VAR_env_name}"

      #TODO: Cache Binaries
      - name: Download kubectl
        run: curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      - name: Install kubectl
        run: sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      - name: Check kubectl
        run: kubectl version --client
      - name: Locate kubectl
        run: which kubectl

      - name: Download eksctl
        run: curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
      - name: Install eksctl
        run: sudo mv /tmp/eksctl /usr/local/bin
      - name: Check eksctl
        run: eksctl version
      - name: Locate eksctl
        run: which eksctl

      - name: Install helm
        run: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Check helm
        run: eksctl version
      - name: Locate helm
        run: which helm

      - name: Install terraform
        run: curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
      - run: sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
      - run: sudo apt-get update && sudo apt-get install terraform
      - name: Check terraform
        run: terraform version
      - name: Locate terraform
        run: which terraform

      - name: Locate JQ
        run: which jq

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Check AWS authentication
        run: aws sts get-caller-identity

      - name: Lookup local env
        run: find .

      - name: Run apply script
        run: ./apply.sh
        working-directory: eks
